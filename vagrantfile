# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.require_version ">= 1.8.5"

Vagrant.configure("2") do |config|
    config.vagrant.host = :detect

    config.vm.boot_timeout = 300
    config.vm.box = "ubuntu/xenial64"
    config.vm.box_check_update = true
    config.vm.graceful_halt_timeout = 60

    config.vm.provider "virtualbox" do |v|
        v.gui = false
        v.customize ["modifyvm", :id, "--rtcuseutc", "on"]
        v.customize ["modifyvm", :id, "--hwvirtex", "on"]
        v.customize ["modifyvm", :id, "--nestedpaging", "on"]
        v.customize ["modifyvm", :id, "--vtxvpid", "on"]
        v.customize ["modifyvm", :id, "--largepages", "on"]
        v.customize ["modifyvm", :id, "--acpi", "on"]
        v.customize ["modifyvm", :id, "--nictype1", "virtio"]
        v.customize ["modifyvm", :id, "--groups", "/Docker Everywhere"]
    end

    config.vm.provision "file", source: "files/inventory", destination: "/tmp/inventory"

#   config.vm.provision "shell" do |remote|
#       remote.path = "scripts/install-ansible.sh"
#   end

#   config.vm.provision "shell" do |remote|
#       remote.path = "scripts/install-docker.sh"
#   end

#   config.vm.provision "shell" do |remote|
#       remote.path = "scripts/install-operations-tools.sh"
#   end

    config.vm.define "alpha" do |alpha|
        alpha.vm.provider "virtualbox" do |v|
            v.gui = true
            v.name = "everywhere.alpha"
            v.customize ["modifyvm", :id, "--memory", "1024"]
            v.customize ["modifyvm", :id, "--vram", "12"]
            v.customize ["modifyvm", :id, "--cpus", "1"]
        end
        alpha.vm.provision "shell", inline: "echo alpha"
    end

    config.vm.define "bravo" do |bravo|
        bravo.vm.provider "virtualbox" do |v|
            v.gui = true
            v.name = "everywhere.bravo"
            v.customize ["modifyvm", :id, "--memory", "1024"]
            v.customize ["modifyvm", :id, "--vram", "12"]
            v.customize ["modifyvm", :id, "--cpus", "1"]
        end
        bravo.vm.provision "shell", inline: "echo bravo"
    end
end
